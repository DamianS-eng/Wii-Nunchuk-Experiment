// Libraries
#include <NintendoExtensionCtrl.h>

// Joystick
const int JoyCenter = 128;   // 255 / 2
const int JoyDeadzone = 50;  // +/- area around the center to ignore

//Map axes to axes

//Digital actions
KeyboardButton jump(' ');
KeyboardButton use('e');
MouseButton fire(MOUSE_LEFT);

// Nunchuk
Nunchuk Nchuk(Wire);

// Program Data
uint8_t xCenter = 0;
uint8_t yCenter = 0;
boolean weaponSwitched = false;

void setup() {
    // I2C Init
    Nchuk.begin();
    
    //What clock rate is needed?
    Nchuk.i2c().setClock(400000);
    
    boolean Connected = false;
   
    while (!(Connected)) {
        Nchuk.connect();
    }

    xCenter = Nchuk.joyX();
    yCenter = Nchuk.joyY();
}

void loop() {
    boolean Ready = Nchuk.update();

    if (Ready) {
        // WASD
        uint8_t x = Nchuk.joyX();
        uint8_t y = Nchuk.joyY();

        moveLeft.set(x < JoyCenter - JoyDeadzone);
        moveRight.set(x > JoyCenter + JoyDeadzone);

        moveForward.set(y > JoyCenter + JoyDeadzone);
        moveBackward.set(y < JoyCenter - JoyDeadzone);

        // Jump
        jump.set(Nchuk.buttonZ());

        // Use / Buy
        use.set(Nchuk.buttonC());

        // Aiming
        int16_t x = ((int16_t) Nchuk.joyX() - (int16_t) xCenter) / 4;
        int16_t y = ((int16_t) Nchuk.joyY() - (int16_t) yCenter) / 4;
        Mouse.move(x, -y);

        // Fire
        fire.set(Nchuk.buttonZ());

        // Next Weapon
        if (Nchuk.buttonC()) {
            if (!weaponSwitched) {
                Mouse.move(0, 0, 1);  // Scroll up
            }
            weaponSwitched = !weaponSwitched;
        }
        
        // Reload
    }
}
