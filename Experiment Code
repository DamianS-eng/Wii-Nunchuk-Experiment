// Libraries
#include <NintendoExtensionCtrl.h>
#include <HID_Buttons.h>

// Keyboard Buttons
const int JoyCenter = 128;   // 255 / 2
const int JoyDeadzone = 50;  // +/- area around the center to ignore

KeyboardButton moveForward('w');
KeyboardButton moveLeft('a');
KeyboardButton moveBackward('s');
KeyboardButton moveRight('d');

KeyboardButton jump(' ');
KeyboardButton use('e');

// Mouse Buttons
MouseButton fire(MOUSE_LEFT);

// Nunchuks
Nunchuk leftNchuk(Wire);
Nunchuk rightNchuk(Wire1);

// Program Data
uint8_t xCenter = 0;
uint8_t yCenter = 0;
boolean weaponSwitched = false;

void setup() {
    // I2C Init
    leftNchuk.begin();
    rightNchuk.begin();

    leftNchuk.i2c().setClock(400000);
    rightNchuk.i2c().setClock(400000);

    boolean leftConnected = false;
    boolean rightConnected = false;

    while (!(leftConnected && rightConnected)) {
        if (!leftConnected)  { leftConnected  = leftNchuk.connect(); }
        if (!rightConnected) { rightConnected = rightNchuk.connect(); }
    }

    xCenter = rightNchuk.joyX();
    yCenter = rightNchuk.joyY();
}

void loop() {
    boolean leftReady = leftNchuk.update();
    boolean rightReady = rightNchuk.update();

    if (leftReady) {
        // WASD
        uint8_t x = leftNchuk.joyX();
        uint8_t y = leftNchuk.joyY();

        moveLeft.set(x < JoyCenter - JoyDeadzone);
        moveRight.set(x > JoyCenter + JoyDeadzone);

        moveForward.set(y > JoyCenter + JoyDeadzone);
        moveBackward.set(y < JoyCenter - JoyDeadzone);

        // Jump
        jump.set(leftNchuk.buttonZ());

        // Use / Buy
        use.set(leftNchuk.buttonC());

    }

    if (rightReady) {
        // Aiming
        int16_t x = ((int16_t) rightNchuk.joyX() - (int16_t) xCenter) / 4;
        int16_t y = ((int16_t) rightNchuk.joyY() - (int16_t) yCenter) / 4;
        Mouse.move(x, -y);

        // Fire
        fire.set(rightNchuk.buttonZ());

        // Next Weapon
        if (rightNchuk.buttonC()) {
            if (!weaponSwitched) {
                Mouse.move(0, 0, 1);  // Scroll up
            }
            weaponSwitched = true;
        }
        else {
            weaponSwitched = false;
        }
    }
}
